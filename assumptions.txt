Assumptions
	- The cost of parking process is rounded to the second decimal place after calculation based on given rules. Its value is kept in app's primary currency (PLN).
	- The cost of parking is set after parking meter is stopped (ofc it could be changed according to needs, like a calculation of cost at the moment of the check).
	- I did not focus too much on 'edge cases' regarding makePayment method, although it wouldn't take long to cover them. Improvements would (for instance )require checks if payment to given parking process was already made or if it was free.

Future
	- Adding more currencies: It is possible to add different currencies to the app. In order to return more currency options, one could use some source of exchange rates in getDisplayableCosts(Money) method and return new Money objects with added currencies.





Brief endpoints summary
1. starting a parking meter = creating a ParkingProcess
    POST /parking-processes
    body: { "meterId" : 1, "forDisabled" : true}
2. stopping a parking meter
    PATCH /parking-processes/{processId}
    body: { "parkingMeterToBeStopped" : true }
3. check active parking meters (or generally parking processes by stage)
    GET /parking-processes?stage=ONGOING
4. check parking cost (after parking meter stopped)
    GET /parking-processes/{processId}/costs
5. check daily profits
    GET /profits?day=2019-12-29

